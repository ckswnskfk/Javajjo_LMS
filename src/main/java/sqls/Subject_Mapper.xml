<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="happy.jaj.prj.Subject_Mapper">

	<!-- (강사)자신의 과정 조회 -->
	<select id="select_course_list" parameterType="java.lang.String" resultType="CourseDTO">
		SELECT COURSECODE, COURSENAME, STARTDATE, COURSECNT
		FROM COURSE
		JOIN TEACHER USING(COURSECODE)
		WHERE ID = #{id}
	</select>
	
	<!-- 전체 과목 조회 -->
	<select id="subject_select_all" resultType="SubjectDTO">
		SELECT SUBJECTCODE, SUBJECTNAME, SUBJECTTYPE, EXAMTYPE
		FROM SUBJECT
	</select>
	
	<!-- 해당 과정명의 전 회차 조회 -->
	<select id="subject_pre_course" parameterType="CourseDTO" resultType="CourseDTO">
		SELECT *
		FROM COURSE
		WHERE COURSENAME = #{coursename} AND COURSECNT != #{coursecnt}
	</select>
	
	<!-- 과정에 해당하는 과목 조회 -->
	<select id="subject_choice" parameterType="CourseSubjectDTO" resultType="SubjectDTO">
		SELECT SEQ,SUBJECTCODE, SUBJECTNAME, SUBJECTTYPE, EXAMTYPE, SUBJECTTIME, STARTDATE
		FROM SUBJECT JOIN COURSE_SUBJECT 
		USING (SUBJECTCODE) WHERE COURSECODE = #{coursecode}
	</select>
	
	<!-- 과정에 과목 추가 -->
	<insert id="subject_add_course" parameterType="CourseSubjectDTO">
		INSERT INTO COURSE_SUBJECT (SEQ, COURSECODE, SUBJECTCODE, SUBJECTTIME, CONTENT, STARTDATE)
 		VALUES(COURSE_SUBJECT_SEQ.NEXTVAL, #{coursecode}, #{subjectcode}, #{subjecttime}, #{content}, #{startdate})
	</insert>
	
	<!-- 새로운 과목 생성 -->
	<insert id="subject_add" parameterType="SubjectDTO">
		INSERT INTO SUBJECT(SUBJECTCODE, SUBJECTNAME, SUBJECTTYPE, EXAMTYPE)
		VALUES
		((SELECT 'S'|| LPAD((TO_NUMBER(SUBSTR(MAX(SUBJECTCODE),2))+1),5,0)  FROM SUBJECT),
		#{subjectname}, #{subjecttype}, #{examtype})
	</insert>
	
<!-- 	이름 뿌려주는용도 -->
	<select id="subjectname" parameterType="java.lang.String" resultType="SubjectDTO">
		SELECT SUBJECTNAME,SUBJECTCODE FROM SUBJECT WHERE SUBJECTCODE=#{subjectcode}
		
	</select>
	<!-- 과정에 들어가있는 과정 삭제 -->
	<delete id="course_sub_Del" parameterType="CourseSubjectDTO">
	DELETE FROM COURSE_SUBJECT WHERE SEQ=#{seq}
	</delete>
	
	<delete id="subDel" parameterType="SubjectDTO">
		DELETE FROM SUBJECT WHERE SUBJECTCODE=#{subjectcode}
	</delete>
	
	<select id="copySelectCnt" parameterType="java.lang.String" resultType="CourseDTO">
	SELECT COURSECNT,COURSECODE,COURSENAME FROM COURSE WHERE COURSENAME=#{coursename}
	</select>
	
		<select id="cntsel" parameterType="CourseDTO" resultType="SubjectDTO">
	SELECT COURSECNT, COURSENAME,SEQ,SUBJECTNAME,SUBJECTTIME,SUBJECTTYPE
	FROM COURSE JOIN COURSE_SUBJECT ON COURSE.COURSECODE = COURSE_SUBJECT.COURSECODE
	JOIN SUBJECT ON COURSE_SUBJECT.SUBJECTCODE = SUBJECT.SUBJECTCODE
	WHERE COURSENAME = #{coursename} AND COURSECNT=#{coursecnt} ORDER BY COURSECNT
	</select>
	
	<select id="timeset" parameterType="java.lang.String" resultType="SubjectDTO">
	SELECT SUBJECTTIME,CONTENT,SUBJECTNAME,SEQ FROM COURSE_SUBJECT JOIN SUBJECT USING(SUBJECTCODE) WHERE SEQ=#{seq}
	</select>
	<insert id="endset" parameterType="SubjectDTO">
	INSERT INTO COURSE_SUBJECT
(SEQ, COURSECODE, SUBJECTCODE, SUBJECTTIME, CONTENT, STARTDATE)
VALUES(COURSE_SUBJECT_SEQ.NEXTVAL, #{coursecode},
(SELECT SUBJECTCODE FROM COURSE_SUBJECT WHERE SEQ = #{seq}), 
(SELECT SUBJECTTIME FROM COURSE_SUBJECT WHERE SEQ = #{seq}),
(SELECT CONTENT FROM COURSE_SUBJECT WHERE SEQ = #{seq}), #{startdate})
</insert>
	
	
	
</mapper>
